# syntax=docker/dockerfile:1.4

ARG NODE_VERSION=22.1.0
ARG PNPM_VERSION=9.0.6

FROM node:${NODE_VERSION}-alpine AS build

WORKDIR /app

COPY package*.json pnpm-lock.yaml ./

# Install pnpm
RUN --mount=type=cache,target=/root/.npm \
    npm install -g pnpm@${PNPM_VERSION}

# Install deps
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=pnpm-lock.yaml,target=pnpm-lock.yaml \
    --mount=type=cache,target=/root/.local/share/pnpm/store \
    pnpm install --prod --frozen-lockfile

COPY . .

ARG PORT
ENV NODE_ENV=production

RUN pnpm build


FROM nginx:alpine AS runtime

ARG FRONTEND_PORT
ARG BACKEND_PORT

COPY --from=build /app/nginx/templates/nginx.conf.template /etc/nginx/templates/nginx.conf.template
RUN envsubst < /etc/nginx/templates/nginx.conf.template > /etc/nginx/conf.d/default.conf

WORKDIR /usr/share/nginx/html

RUN rm -rf ./*
COPY --from=build /app/dist .

ENTRYPOINT ["nginx", "-g", "daemon off;"]
